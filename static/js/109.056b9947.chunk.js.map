{"version":3,"file":"static/js/109.056b9947.chunk.js","mappings":"kLAKA,MAAMA,EAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,sBA2DhC,EAzDmBC,IACjB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAwC3C,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAClCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,CACxBL,IAAaG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,SAAC,gBACvCF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CACHC,OA5CS,CACbC,KAAM,SACNC,SAAU,CAAC,QAAS,WAAY,WAChCC,WAAY,CACVC,MAAO,CAAEH,KAAM,SAAUI,MAAO,mCAChCC,SAAU,CAAEL,KAAM,SAAUI,MAAO,qBAAYE,OAAQ,YACvDC,QAAS,CAAEP,KAAM,SAAUI,MAAO,sCAAqBE,OAAQ,cAuC7DE,UAAWA,EAAAA,GACXC,SApCW,CACf,yBAA0B,CACxB,MAAS,CACP,UAAY,GAEd,UAAY,EACZ,WAAc,yBA+BZC,SA3BWC,UAAyB,IAAlB,SAAEC,GAAUC,EAClCrB,GAAa,GACb,MAAM,MAAEW,EAAK,SAAEE,EAAQ,QAAEE,GAAYK,EACrC,GAAIP,IAAaE,EACf,UACQrB,EAAI4B,kBAAkBC,aAAa,CAAEZ,QAAOE,aAClDf,EAAM0B,YAAY,SAClBC,OAAOC,SAASC,QAClB,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,CAAC,QACC5B,GAAa,EACf,MAEA+B,MAAM,sBACN/B,GAAa,EACf,EAYIgC,SAAUjC,KAEZG,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sDAAuD8B,QAASA,IAAMnC,EAAM0B,YAAY,SAASpB,SAAC,mDACrG,C","sources":["routers/main/register/register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Form from '@rjsf/core';\r\nimport validator from '@rjsf/validator-ajv8';\r\nimport * as Realm from \"realm-web\";\r\nimport './Register.css'; // Import CSS file\r\nconst app = new Realm.App({ id: process.env.REACT_APP_REALM_ID });\r\n\r\nconst Register = ( probs) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const schema = {\r\n    type: 'object',\r\n    required: ['email', 'password', 'confirm'],\r\n    properties: {\r\n      email: { type: 'string', title: 'Tên đăng nhập' },\r\n      password: { type: 'string', title: 'Mật khẩu', format: 'password' },\r\n      confirm: { type: 'string', title: 'Xác nhận mật khẩu', format: 'password' }\r\n    }\r\n  };\r\n\r\n  const uiSchema = {\r\n    \"ui:submitButtonOptions\": {\r\n      \"props\": {\r\n        \"disabled\": false,\r\n      },\r\n      \"norender\": false,\r\n      \"submitText\": \"Đăng ký\",\r\n    }\r\n  };\r\n\r\n  const onSubmit = async ({ formData }) => {\r\n    setIsLoading(true);\r\n    const { email, password, confirm } = formData;\r\n    if (password === confirm) {\r\n      try {\r\n        await app.emailPasswordAuth.registerUser({ email, password });\r\n        probs.setNavigate(\"login\")\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    } else {\r\n      alert('password not match');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container-wrapper'>\r\n    <div className=\"containers\">\r\n      {isLoading && <div className=\"spinner\">Loading...</div>}\r\n      <Form\r\n        schema={schema}\r\n        validator={validator}\r\n        uiSchema={uiSchema}\r\n        onSubmit={onSubmit}\r\n        disabled={isLoading}\r\n      />\r\n      <p className=\"text-blue-500  mt-4 cursor-pointer  hover:underline\"  onClick={() => probs.setNavigate('login')}>Trở lại đăng nhập</p>\r\n    </div></div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["app","Realm","id","process","probs","isLoading","setIsLoading","useState","_jsx","className","children","_jsxs","Form","schema","type","required","properties","email","title","password","format","confirm","validator","uiSchema","onSubmit","async","formData","_ref","emailPasswordAuth","registerUser","setNavigate","window","location","reload","error","console","log","alert","disabled","onClick"],"sourceRoot":""}
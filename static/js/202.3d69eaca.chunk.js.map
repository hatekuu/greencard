{"version":3,"file":"static/js/202.3d69eaca.chunk.js","mappings":"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","sources":["routers/main/components/Products.js","routers/main/home/home.js","routers/main/login/login.js","routers/main/main.js","routers/main/register/register.js"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nconst Products = (probs) => {\r\n    const navigate = useNavigate();\r\n  return (\r\n    <div>\r\n    <h2>Product List</h2>\r\n    <ul>\r\n      {probs.data.map((product) => (\r\n        <li key={product._id} onClick={() => navigate(`/greencard/${product._id}`)} >\r\n          <strong>Name:</strong> {product.name}<br />\r\n   \r\n          <strong>Category:</strong> {product.category}<br />\r\n          <strong>Price:</strong> ${product.price}<br />\r\n          <strong>Description:</strong> {product.description}<br />\r\n          <br />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Products","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Products from '../components/Products';\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []); // Chỉ chạy lại khi component mount lần đầu\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`https://ap-southeast-1.aws.data.mongodb-api.com/app/${process.env.REACT_APP_REALM_ID}/endpoint/getproducts`);\r\n      const fetchedData = response.data;\r\n      setData(fetchedData);\r\n    } catch (error) {\r\n      console.error('Error fetching data: ', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Products data={data}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport Form from '@rjsf/core';\r\nimport validator from '@rjsf/validator-ajv8';\r\nimport * as Realm from 'realm-web';\r\nimport './Login.css'; // Import CSS file\r\n\r\nconst app = new Realm.App({ id: process.env.REACT_APP_REALM_ID });\r\n\r\nconst Login = (props) => {\r\n  const [e, setE] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const schema = {\r\n    type: 'object',\r\n    required: ['email', 'password'],\r\n    properties: {\r\n      email: { type: 'string', title: 'Tên đăng nhập' },\r\n      password: { type: 'string', title: 'Mật khẩu', format: 'password' }\r\n    }\r\n  };\r\n\r\n  const uiSchema = {\r\n    \"ui:submitButtonOptions\": {\r\n      \"props\": {\r\n        \"disabled\": isLoading, // Disable submit button when loading\r\n      },\r\n      \"norender\": false,\r\n      \"submitText\": \"Đăng nhập\",\r\n    }\r\n  };\r\n\r\n  const onSubmit = async ({ formData }) => {\r\n    setIsLoading(true);\r\n    const { email, password } = formData;\r\n    const credentials = Realm.Credentials.emailPassword(email, password);\r\n    \r\n    try {\r\n      const user = await app.logIn(credentials);\r\n      if (user.customData?.type === \"Admin\") {\r\n        window.location.href = \"/greencard/admin\";\r\n      } else {\r\n        try {\r\n           props.setNavigate(\"home\"); // Đợi hàm này hoàn thành\r\n  \r\n         \r\n            setTimeout(() => {\r\n              window.location.reload()\r\n            }, 1);\r\n        \r\n        } catch (error) {\r\n          console.log(error.error)\r\n        }\r\n\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      await app.emailPasswordAuth.sendResetPasswordEmail({ email });\r\n      alert(\"Đã gửi email đặt lại mật khẩu thành công!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container-wrapper'>\r\n      <div className=\"containers\">\r\n        {isLoading && <div className=\"spinner\">Loading...</div>}\r\n        {e ? (\r\n          <>\r\n            <Form\r\n              schema={schema}\r\n              validator={validator}\r\n              uiSchema={uiSchema}\r\n              onSubmit={onSubmit}\r\n              disabled={isLoading}\r\n            />\r\n            <div className=\"ml-5 mt-4 flex items-center justify-cent\">\r\n              <p className=\"mr-2\">Quên mật khẩu?</p>\r\n              <p\r\n                className=\"text-blue-500 cursor-pointer hover:text-blue-700 hover:underline\"\r\n                onClick={() => setE(false)}\r\n              >\r\n                Đặt lại mật khẩu ngay!\r\n              </p>\r\n            </div>\r\n            <p className='text-blue-500 mt-2 cursor-pointer hover:text-blue-700 hover:underline' onClick={() => props.setNavigate('register')}>Đăng ký tài khoản</p>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <form onSubmit={handleSubmit}>\r\n                <label>\r\n                  Email:\r\n                  <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(event) => setEmail(event.target.value)}\r\n                    disabled={isLoading}\r\n                  />\r\n                </label>\r\n                <button type=\"submit\" disabled={isLoading}>Submit</button>\r\n              </form>\r\n            </div>\r\n            <p className='text-blue-500 mt-4  cursor-pointer hover:text-blue-700 hover:underline' onClick={() => setE(true)}>Trở lại đăng nhập</p>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Login from './login/login';\r\nimport Register from './register/register';\r\nimport Home from './home/home';\r\n\r\nconst Main = (probs) => {\r\n\r\n  const [navigate, setNavigate] = useState('home');\r\n  useEffect(() => {\r\n  if(probs.user?.customData?.type===\"Admin\"){\r\n    window.location.href=\"/greencard/admin\"\r\n  }\r\n  setNavigate(probs.navigate)\r\n \r\n  }, [probs.navigate]);\r\n  const renderComponent = () => {\r\n    switch (navigate) {\r\n      case 'login':\r\n        return <Login setNavigate={setNavigate} />;\r\n      case 'register':\r\n        return <Register setNavigate={setNavigate} />;\r\n      case 'home':\r\n        return <Home setNavigate={setNavigate} />;\r\n      default:\r\n        return \r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n    {/* <NavBar user={user} setNavigate={setNavigate} setLogout={setLogout}/>\r\n    <Toolbar /> */}\r\n    <div >\r\n        {renderComponent()}\r\n      </div>\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState } from 'react';\r\nimport Form from '@rjsf/core';\r\nimport validator from '@rjsf/validator-ajv8';\r\nimport * as Realm from \"realm-web\";\r\nimport './Register.css'; // Import CSS file\r\nconst app = new Realm.App({ id: process.env.REACT_APP_REALM_ID });\r\n\r\nconst Register = ( probs) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const schema = {\r\n    type: 'object',\r\n    required: ['email', 'password', 'confirm'],\r\n    properties: {\r\n      email: { type: 'string', title: 'Tên đăng nhập' },\r\n      password: { type: 'string', title: 'Mật khẩu', format: 'password' },\r\n      confirm: { type: 'string', title: 'Xác nhận mật khẩu', format: 'password' }\r\n    }\r\n  };\r\n\r\n  const uiSchema = {\r\n    \"ui:submitButtonOptions\": {\r\n      \"props\": {\r\n        \"disabled\": false,\r\n      },\r\n      \"norender\": false,\r\n      \"submitText\": \"Đăng ký\",\r\n    }\r\n  };\r\n\r\n  const onSubmit = async ({ formData }) => {\r\n    setIsLoading(true);\r\n    const { email, password, confirm } = formData;\r\n    if (password === confirm) {\r\n      try {\r\n        await app.emailPasswordAuth.registerUser({ email, password });\r\n        probs.setNavigate(\"login\")\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    } else {\r\n      alert('password not match');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container-wrapper'>\r\n    <div className=\"containers\">\r\n      {isLoading && <div className=\"spinner\">Loading...</div>}\r\n      <Form\r\n        schema={schema}\r\n        validator={validator}\r\n        uiSchema={uiSchema}\r\n        onSubmit={onSubmit}\r\n        disabled={isLoading}\r\n      />\r\n      <p className=\"text-blue-500  mt-4 cursor-pointer  hover:underline\"  onClick={() => probs.setNavigate('login')}>Trở lại đăng nhập</p>\r\n    </div></div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["probs","navigate","useNavigate","_jsxs","children","_jsx","data","map","product","onClick","concat","_id","name","category","price","description","Home","setData","useState","useEffect","fetchData","async","fetchedData","axios","get","process","error","console","Products","app","Realm","id","props","e","setE","email","setEmail","isLoading","setIsLoading","uiSchema","className","_Fragment","Form","schema","type","required","properties","title","password","format","validator","onSubmit","formData","_ref","credentials","emailPassword","_user$customData","logIn","customData","window","location","href","setNavigate","setTimeout","reload","log","disabled","event","preventDefault","emailPasswordAuth","sendResetPasswordEmail","alert","value","onChange","target","_probs$user","_probs$user$customDat","user","renderComponent","Login","Register","confirm","registerUser"],"sourceRoot":""}